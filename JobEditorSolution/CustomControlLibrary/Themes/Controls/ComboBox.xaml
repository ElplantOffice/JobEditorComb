<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:CustomControlLibrary">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Colors.xaml"/>
    <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Fonts.xaml"/>
  </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type local:ComboBox}">
    <Setter Property="FrameworkElement.MinHeight" Value="26"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultControlContentThemeFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultControlContentThemeFontSize}"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource ComboBoxForegroundThemeBrush}"/>
    <Setter Property="Control.Background" Value="{DynamicResource ComboBoxBackgroundThemeBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ComboBoxBorderThemeBrush}"/>
    <Setter Property="Control.BorderThickness" Value="2"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ComboBox}">
          <Grid>
            <FrameworkElement.Resources>
                            <Style x:Key="ComboToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Control.Template">
                  <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                      <Grid>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ComboBoxPressedBackgroundThemeBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled"/>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                  <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ComboBoxCheckedBackgroundThemeBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked"/>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused"/>
                            <VisualState x:Name="Unfocused"/>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="{TemplateBinding Control.Background}">
                          <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            Content="{TemplateBinding ContentControl.Content}"
                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                        </Border>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterBorder" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource ComboBoxDisabledBorderThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource ComboBoxDisabledForegroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownToggle" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource ComboBoxDisabledBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource ComboBoxDisabledForegroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Storyboard.TargetName="PopupBorder">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ValidationStates">
                <VisualState x:Name="Valid"/>
                <VisualState x:Name="InvalidUnfocused"/>
                <VisualState x:Name="InvalidFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}">
              <Grid>
                <ToggleButton x:Name="DropDownToggle" BorderThickness="0" Background="{TemplateBinding Control.Background}"
                              HorizontalContentAlignment="Right" Style="{StaticResource ComboToggleStyle}"
                              KeyboardNavigation.IsTabStop="false"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Grid x:Name="WithDropDownSymol" Margin="4,0,4,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                  </Grid.ColumnDefinitions>
                  <TextBlock x:Name="Arrow" Margin="10,0,0,0" Grid.Column="1" Foreground="{TemplateBinding Control.Foreground}"
                             FontWeight="Bold" FontSize="{DynamicResource ComboBoxArrowThemeFontSize}"
                             FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Right"
                             IsHitTestVisible="false" Text="{TemplateBinding local:ComboBox.DropDownSymbol}"
                             VerticalAlignment="Center"/>
                  <ContentControl x:Name="ContentSite" Foreground="{TemplateBinding Control.Foreground}" Grid.Column="0"
                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                  ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                </Grid>
                <Grid x:Name="WithoutDropDownSymol" Margin="4,0,4,0">
                  <ContentControl x:Name="ContentSiteWithoutDropDown" Foreground="{TemplateBinding Control.Foreground}"
                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                  ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                </Grid>
              </Grid>
            </Border>
            <Popup x:Name="PART_Popup"
                   PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                   MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
              <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto"
                      Background="{DynamicResource BaseBackgroundThemeBrush}">
                <Grid Background="{DynamicResource ComboBoxItemBackgroundThemeBrush}">
                  <local:ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="0" Padding="1"
                                      Background="{DynamicResource BaseBackgroundThemeBrush}">
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </local:ScrollViewer>
                </Grid>
              </Border>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="local:ComboBox.DropDownSymbol" Value="">
              <Setter TargetName="WithDropDownSymol" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="WithoutDropDownSymol" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>