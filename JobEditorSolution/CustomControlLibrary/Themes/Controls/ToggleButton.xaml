<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:CustomControlLibrary">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Colors.xaml"/>
    <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Fonts.xaml"/>
  </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type local:ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToggleButtonBackgroundThemeBrush}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ToggleButtonForegroundThemeBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ToggleButtonBorderThemeBrush}"/>
    <Setter Property="Control.BorderThickness" Value="2"/>
    <Setter Property="Control.Padding" Value="12,4,12,5"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.FontFamily" Value="{StaticResource DefaultControlContentThemeFontFamily}"/>
    <Setter Property="Control.FontWeight" Value="SemiBold"/>
    <Setter Property="Control.FontSize" Value="{StaticResource DefaultControlContentThemeFontSize}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                  Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                      <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedForegroundThemeColor}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPointerOverBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedBorderThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                  Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                      <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonCheckedForegroundThemeColor}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonDisabledBorderThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                  Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                      <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonDisabledForegroundThemeColor}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" Margin="0">
              <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Content="{TemplateBinding ContentControl.Content}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="false" Opacity="0" StrokeDashOffset="1.5"
                       StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                       StrokeDashArray="1,1"/>
            <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="false" Opacity="0" StrokeDashOffset="0.5"
                       StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                       StrokeDashArray="1,1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true">
              <Setter TargetName="Border" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>