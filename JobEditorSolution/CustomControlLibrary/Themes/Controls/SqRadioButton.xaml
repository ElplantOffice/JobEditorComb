<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:CustomControlLibrary">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Colors.xaml"/>
    <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Fonts.xaml"/>
  </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type local:SqRadioButton}">
    <Setter Property="Control.Background" Value="{DynamicResource RadioButtonBackgroundThemeBrush}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource RadioButtonForegroundThemeBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource RadioButtonBorderThemeBrush}"/>
    <Setter Property="Control.BorderThickness" Value="2"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.FontFamily" Value="{StaticResource DefaultControlContentThemeFontFamily}"/>
    <Setter Property="Control.FontWeight" Value="Normal"/>
    <Setter Property="Control.FontSize" Value="{StaticResource DefaultControlContentThemeFontSize}"/>
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Polygon Margin="1,1,0,0" Points="0,0 0,20 20,0"
                     Stroke="{DynamicResource RadioButtonValidationBorderThemeBrush}" StrokeThickness="1"
                     Fill="{DynamicResource RadioButtonValidationBorderThemeBrush}" HorizontalAlignment="Left"
                     VerticalAlignment="Top"/>
            <AdornedElementPlaceholder/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SqRadioButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonPressedBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonPressedForegroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonPointerOverBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonCheckedBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonCheckedBorderThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonCheckedForegroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonDisabledBackgroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonDisabledBorderThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource RadioButtonDisabledForegroundThemeBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}">
              <ContentControl x:Name="Content" Foreground="{TemplateBinding Control.Foreground}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              Content="{TemplateBinding ContentControl.Content}"
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="true"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Value="{DynamicResource RadioButtonPointerOverBackgroundThemeBrush}"
                      Property="Border.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>