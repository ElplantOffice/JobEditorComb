<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:CustomControlLibrary">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Colors.xaml"/>
        <ResourceDictionary Source="/CustomControlLibrary;component/Themes/General/Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <local:MergeSolidColorBrush x:Key="MergeSolidColorBrush"/>
    <local:PointCollectionConverter x:Key="PointCollectionConverter"/>
    <Style x:Key="TextBoxClearButtonStyle" TargetType="{x:Type local:Button}">
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Padding" Value="1"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Button}">
                    <Grid Background="{TemplateBinding Control.Background}">
                        <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" RecognizesAccessKey="true"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="false">
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.2"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter Property="UIElement.RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98" CenterX="0.5" CenterY="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:TextBox}">
        <Setter Property="local:TextBox.IsMonitoring" Value="true"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderThemeBrush}"/>
        <Setter Property="Control.Background" Value="{DynamicResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="TextBoxBase.SelectionBrush"
            Value="{DynamicResource TextBoxSelectionBackgroundThemeBrush}"/>
        <Setter Property="FrameworkElement.ContextMenu">
            <Setter.Value>
                <ContextMenu IsEnabled="false" Visibility="Hidden"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultControlContentThemeFontFamily}"/>
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultControlContentThemeFontSize}"/>
        <Setter Property="Control.FontWeight" Value="Normal"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.Width" Value="250"/>
        <Setter Property="FrameworkElement.Height" Value="46"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextBox}">
                    <Border x:Name="Root">
                        <Grid>
                            <Border x:Name="Base" Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <local:ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="false" VerticalAlignment="Stretch"/>
                                    <local:Button x:Name="PART_ClearText" Style="{StaticResource TextBoxClearButtonStyle}"
                                Foreground="{TemplateBinding Control.Foreground}" Width="28" HorizontalAlignment="Right"
                                FontSize="22" FontFamily="Marlett" Content="r" IsTabStop="false" Visibility="Hidden"
                                IsEnabled="false"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ClearTextButton)}" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="FrameworkElement.Margin" Value="2,2,26,2"/>
                            <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Value="False" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ClearTextButton)}">
                            <Setter TargetName="PART_ContentHost" Property="FrameworkElement.Margin" Value="4,2,4,2"/>
                            <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="False"/>
                        </DataTrigger>
                        <Trigger Property="ClearTextButton" Value="False">
                            <Setter TargetName="PART_ClearText" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Base" Value="{DynamicResource TextBoxPointerOverBackgroundThemeBrush}"
                      Property="Border.Background"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="Base" Value="{DynamicResource TextBoxDisabledBackgroundThemeBrush}"
                      Property="Border.Background"/>
                            <Setter Value="{DynamicResource TextBoxDisabledForegroundThemeBrush}" Property="Control.Foreground"/>
                            <Setter Value="{DynamicResource TextBoxDisabledBorderThemeBrush}" Property="Control.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsFocused" Value="true">
                            <Setter TargetName="Base" Value="{DynamicResource TextBoxPointerOverBackgroundThemeBrush}"
                      Property="Border.Background"/>
                            <Setter TargetName="PART_ClearText" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ClearText" Value="{DynamicResource BaseBackgroundThemeBrush}"
                      Property="Control.Foreground"/>
                        </Trigger>
                        <Trigger Property="TextBoxBase.IsReadOnly" Value="true">
                            <Setter TargetName="PART_ClearText" Property="UIElement.Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ClearText" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="true"/>
                            <Setter TargetName="PART_ClearText" Value="{DynamicResource TextBoxClearTextForegroundThemeBrush}"
                      Property="Control.Foreground"/>
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="PART_ClearText" Property="UIElement.RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Polygon Margin="1,1,0,0" Points="0,0 0,20 20,0"
                     Stroke="{DynamicResource RadioButtonValidationBorderThemeBrush}" StrokeThickness="1"
                     Fill="{DynamicResource RadioButtonValidationBorderThemeBrush}" HorizontalAlignment="Left"
                     VerticalAlignment="Top"/>
                        <AdornedElementPlaceholder/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>